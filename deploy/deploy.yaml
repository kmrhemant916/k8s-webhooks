apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: openfaas-webhook-issuer
  namespace: jenkins
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: openfaas-webhook-cert
  namespace: jenkins
spec:
  dnsNames:
    - webhook-deployment.jenkins.svc
    - webhook-deployment.jenkins.svc.cluster.local
  secretName: openfaas-webhook-cert-secret
  issuerRef:
    name: openfaas-webhook-issuer
    kind: Issuer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook-deployment
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhook-deployment
  template:
    metadata:
      labels:
        app: webhook-deployment
    spec:
      containers:
        - name: webhook
          image: iad.ocir.io/idt7ybnr03cb/hemant:l1
          # command: ["sleep", "3600"]
          ports:
            - containerPort: 443
          volumeMounts:
            - name: openfaas-webhook-cert
              mountPath: /etc/webhook/certs
              readOnly: true
      volumes:
        - name: openfaas-webhook-cert
          secret:
            secretName: openfaas-webhook-cert-secret
      imagePullSecrets:
        - name: ocir-auth
---
apiVersion: v1
kind: Service
metadata:
  name: webhook-deployment
  namespace: jenkins
spec:
  ports:
  - port: 443
    targetPort: 443
  selector:
    app: webhook-deployment
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: webhook-configuration
webhooks:
  - name: webhook.jenkins.svc
    clientConfig:
      service:
        name: webhook-deployment
        namespace: jenkins
        path: /mutate
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCekNDQWUrZ0F3SUJBZ0lSQUpBdHI5YS9ib0hjSEtxejVrNjJYSk13RFFZSktvWklodmNOQVFFTEJRQXcKQURBZUZ3MHlOREExTXpBd05qSXdNemhhRncweU5EQTRNamd3TmpJd016aGFNQUF3Z2dFaU1BMEdDU3FHU0liMwpEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMwam00Q1M1ZTV5ZE13Ulh6MjBLa2NvWStQUU5uSm1XZjJPMUxVCnNPNE9QZDJjbmxVbFdIQkRudGhQY2E1b2N4RzlCN2JOczQrSWtKMEhFbjUyUjkwRndPQnZEWUZsbzk1amwzbG4KSjdjcFR5WWRuRk1QYzVxd3o0R1FpZUtyd1pCem1JdjRFZktrTG9iQjNEM2puaDZDZExhTEN5SEdLeHBuQTBwWQp0YmNub0FYNGY0citYSGUyaDBHaVJ5cHVoVEIyN2syUkF4NmRpSXlQdGxvUVVwb282MXdpcHNKbEpIdFpNTm1pCnN0V1Jzc0tIa3h2NE9GM2U3cjFDcFptWXY4b3NwTWZVY3U3L3hxMlBWWG9QeGRPbFAxTFp2ekNkTlJpaW1Wd3EKNmUvZmF2UWZwdnhEcFBKTndlSHF0YXdUTmcxU05YTERGUkRhUlJOVWFIelJxcDYzQWdNQkFBR2pmREI2TUE0RwpBMVVkRHdFQi93UUVBd0lGb0RBTUJnTlZIUk1CQWY4RUFqQUFNRm9HQTFVZEVRRUIvd1JRTUU2Q0huZGxZbWh2CmIyc3RaR1Z3Ykc5NWJXVnVkQzVxWlc1cmFXNXpMbk4yWTRJc2QyVmlhRzl2YXkxa1pYQnNiM2x0Wlc1MExtcGwKYm10cGJuTXVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSVlxU2lPUQpzbWZmR3dwSGZZSXNlM2ZEUi82Zmdkb3FvMU9vbjZ3c2w5WE1rSFRDM0d0bDFiczR2ZEpTSS91MzBDQldLUSs0ClV2T0NpUTNOeEtUOStSUkpxMTdzSWR5N1F4cUFkUnlpMTdFMjU1U0IvY2pCVkNvQk1TdDdEa1BDM0J3WitlejUKcEt3N1lyOC9FM2ZkcDkycVhlU3k1TUN1UWJGQWlrUUZBU2FYczM2SU8vZktBK08xcWt1dVpET0U2bkcrSjk5UQpJcDJvcDlTemhrK2hqdVVaR2pFSlcrMXBYUnNONFlNQUFDQUU0RmlIRlRFa1JyWTlib2F3dHRjYjNkUjRCakpRCkIzbG5vdGVRbUZTbEZ0bjZKUllSYlR0cnNrRmM0ejhQdGd5WWR0bDFZZmZNSnBMTndHNXF4TWo2dmRGeFkrRmoKaEdFc2EwNUVRTHhIazFrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    rules:
    - operations: ["CREATE"]
      apiGroups: [""]
      apiVersions: ["v1"]
      resources: ["pods"]
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions: ["v1"]
